#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

C:/WID/IP - Proiect v2/expressionEvaluator/expressionEvaluator/evaluator/evaluator.cpp
evaluator.h
C:/WID/IP - Proiect v2/expressionEvaluator/expressionEvaluator/evaluator/evaluator.h

C:/WID/IP - Proiect v2/expressionEvaluator/expressionEvaluator/evaluator/evaluator.h
../tipuri/stivaDouble.h
C:/WID/IP - Proiect v2/expressionEvaluator/expressionEvaluator/tipuri/stivaDouble.h
../tipuri/stivaString.h
C:/WID/IP - Proiect v2/expressionEvaluator/expressionEvaluator/tipuri/stivaString.h
../tipuri/coada.h
C:/WID/IP - Proiect v2/expressionEvaluator/expressionEvaluator/tipuri/coada.h
cctype
-
cmath
-
algorithm
-
fstream
-
cstdlib
-
cstring
-
iostream
-

C:/WID/IP - Proiect v2/expressionEvaluator/expressionEvaluator/tipuri/coada.h
string
-
listeString.h
C:/WID/IP - Proiect v2/expressionEvaluator/expressionEvaluator/tipuri/listeString.h

C:/WID/IP - Proiect v2/expressionEvaluator/expressionEvaluator/tipuri/listeDouble.h

C:/WID/IP - Proiect v2/expressionEvaluator/expressionEvaluator/tipuri/listeString.h
string
-

C:/WID/IP - Proiect v2/expressionEvaluator/expressionEvaluator/tipuri/stivaDouble.h
listeDouble.h
C:/WID/IP - Proiect v2/expressionEvaluator/expressionEvaluator/tipuri/listeDouble.h

C:/WID/IP - Proiect v2/expressionEvaluator/expressionEvaluator/tipuri/stivaString.h
listeString.h
C:/WID/IP - Proiect v2/expressionEvaluator/expressionEvaluator/tipuri/listeString.h

